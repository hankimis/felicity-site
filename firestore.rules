rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 커뮤니티 채팅: 모두 읽기 가능, 쓰기는 인증 사용자만 허용
    // 시스템 전용 필드/UID는 클라이언트에서 금지
    match /community-chat/{messageId} {
      allow read: if true;
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid
                    && !(('isSystemAlert' in request.resource.data) || ('isBreakingNews' in request.resource.data) || ('system' in request.resource.data) || ('type' in request.resource.data))
                    && (request.resource.data.text is string)
                    && ('timestamp' in request.resource.data)
                    && ('displayName' in request.resource.data)
                    && ('uid' in request.resource.data)
                    && (request.resource.data.keys().hasOnly(['text','timestamp','uid','displayName','photoURL','newsLink']))
                    ;
      allow update, delete: if false;
    }

    // 온라인 사용자: 본인 문서만 생성/갱신/삭제 가능
    match /online-users/{uid} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // 차트 레이아웃: 본인만 접근
    match /chartLayouts/{layoutId} {
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null
                    && resource.data.userId == request.auth.uid;
    }

    // 자동 저장 차트 상태: 본인만 접근
    match /chartStates/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // 차트 드로잉: 문서 ID가 "{uid}_..." 패턴일 때만 해당 uid 접근 허용
    match /chartDrawings/{docId} {
      allow read, write: if request.auth != null && docId.matches('^' + request.auth.uid + '_.+');
    }

    // 사용자 프로필: 본인만 접근
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}