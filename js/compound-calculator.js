export class CompoundCalculator {
    constructor() {
        this.init();
    }
    
    // Ï†ÑÏó≠ÏúºÎ°ú ÎÖ∏Ï∂ú
    static {
        window.CompoundCalculator = CompoundCalculator;
    }

    init() {
        console.log('üí∞ Compound Calculator initializing...');
        
        // DOMÏù¥ ÏôÑÏ†ÑÌûà Î°úÎìúÎêú ÌõÑ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà ÏÑ§Ï†ï
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => {
                this.setupEventListeners();
                this.setupModal();
            });
        } else {
            this.setupEventListeners();
            this.setupModal();
        }
    }

    setupEventListeners() {
        console.log('üí∞ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà ÏÑ§Ï†ï Ï§ë...');
        
        // Í≥ÑÏÇ∞ÌïòÍ∏∞ Î≤ÑÌäº
        const calculateBtn = document.getElementById('calculate-btn');
        if (calculateBtn) {
            console.log('üí∞ Í≥ÑÏÇ∞ÌïòÍ∏∞ Î≤ÑÌäº Ï∞æÏùå');
            calculateBtn.addEventListener('click', () => {
                console.log('üí∞ Í≥ÑÏÇ∞ÌïòÍ∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠Îê®');
                this.showCalculationModal();
            });
        } else {
            console.warn('üí∞ Í≥ÑÏÇ∞ÌïòÍ∏∞ Î≤ÑÌäºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§');
        }

        // ÏûÖÎ†• ÌïÑÎìú Ìè¨Îß∑ÌåÖ
        const initialAmountInput = document.getElementById('initial-amount');
        if (initialAmountInput) {
            initialAmountInput.addEventListener('input', (e) => this.formatNumberInput(e.target));
            initialAmountInput.addEventListener('blur', (e) => this.formatNumberInput(e.target));
        }

        const annualReturnInput = document.getElementById('annual-return');
        if (annualReturnInput) {
            annualReturnInput.addEventListener('input', (e) => this.formatPercentInput(e.target));
            annualReturnInput.addEventListener('blur', (e) => this.formatPercentInput(e.target));
        }
        
        console.log('üí∞ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà ÏÑ§Ï†ï ÏôÑÎ£å');
    }

    setupModal() {
        // Î™®Îã¨ HTML ÏÉùÏÑ±
        const modalHTML = `
            <div class="compound-result-modal" id="compound-result-modal">
                <div class="modal-content-compound">
                    <button class="modal-close-compound" onclick="window.compoundCalculator.closeModal()">√ó</button>
                    <div class="result-summary">
                        <div class="total-profit" id="modal-total-profit">‚Ç©1,653,298</div>
                        <div class="final-amount" id="modal-final-amount">ÏµúÏ¢Ö Í∏àÏï°</div>
                    </div>
                    <table class="result-table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>ÏàòÏùµ (‚Ç©)</th>
                                <th>Ï¥ùÏï° (‚Ç©)</th>
                                <th>ÏàòÏùµÎ•†</th>
                            </tr>
                        </thead>
                        <tbody id="result-table-body">
                            <!-- Í≥ÑÏÇ∞ Í≤∞Í≥ºÍ∞Ä Ïó¨Í∏∞Ïóê ÎèôÏ†ÅÏúºÎ°ú Ï∂îÍ∞ÄÎê©ÎãàÎã§ -->
                        </tbody>
                    </table>
                    <div class="modal-actions">
                        <button class="btn-secondary-compound" onclick="window.compoundCalculator.shareResult()">Í≥µÏú†ÌïòÍ∏∞</button>
                        <button class="btn-primary-compound" onclick="window.compoundCalculator.downloadResult()">Ï†ÄÏû•</button>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        
        // Î™®Îã¨ Ïä§ÌÉÄÏùº Ï∂îÍ∞Ä (Ïù¥ÎØ∏ÏßÄ Ï∫°Ï≤ò ÏµúÏ†ÅÌôî)
        const style = document.createElement('style');
        style.textContent = `
            .compound-result-modal {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.5);
                display: flex;
                align-items: center;
                justify-content: center;
                z-index: 10000;
                opacity: 0;
                visibility: hidden;
                transition: all 0.3s ease;
            }
            
            .compound-result-modal.show {
                opacity: 1;
                visibility: visible;
            }
            
            .modal-content-compound {
                background: white;
                border-radius: 12px;
                padding: 24px;
                max-width: 600px;
                width: 90%;
                max-height: 85vh;
                overflow-y: auto;
                position: relative;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
                margin: 20px;
            }
            
            .modal-close-compound {
                position: absolute;
                top: 12px;
                right: 16px;
                background: rgba(255, 255, 255, 0.9);
                border: 1px solid #ddd;
                border-radius: 50%;
                width: 32px;
                height: 32px;
                font-size: 18px;
                cursor: pointer;
                color: #666;
                z-index: 10001;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: all 0.2s ease;
            }
            
            .modal-close-compound:hover {
                color: #333;
                background: rgba(255, 255, 255, 1);
                border-color: #999;
            }
            
            .result-summary {
                text-align: center;
                margin-bottom: 24px;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                border-radius: 8px;
                color: white;
            }
            
            .total-profit {
                font-size: 32px;
                font-weight: bold;
                margin-bottom: 8px;
            }
            
            .final-amount {
                font-size: 16px;
                opacity: 0.9;
            }
            
            .result-table {
                width: 100%;
                border-collapse: collapse;
                margin-bottom: 24px;
                background: white;
            }
            
            .result-table th,
            .result-table td {
                padding: 12px;
                text-align: center;
                border-bottom: 1px solid #eee;
            }
            
            .result-table th {
                background: #f8f9fa;
                font-weight: 600;
                color: #333;
            }
            
            .result-table td {
                color: #666;
            }
            
            .profit-cell {
                color: #22c55e !important;
                font-weight: 600;
            }
            
            .amount-cell {
                font-weight: 600;
            }
            
            .percent-cell {
                color: #3b82f6 !important;
                font-weight: 600;
            }
            
            .modal-actions {
                display: flex;
                gap: 12px;
                justify-content: center;
            }
            
            .btn-secondary-compound,
            .btn-primary-compound {
                padding: 12px 24px;
                border: none;
                border-radius: 6px;
                font-size: 14px;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.2s ease;
            }
            
            .btn-secondary-compound {
                background: #f1f5f9;
                color: #475569;
            }
            
            .btn-secondary-compound:hover {
                background: #e2e8f0;
            }
            
            .btn-primary-compound {
                background: #3b82f6;
                color: white;
            }
            
            .btn-primary-compound:hover {
                background: #2563eb;
            }
            
            .btn-secondary-compound:disabled,
            .btn-primary-compound:disabled {
                opacity: 0.6;
                cursor: not-allowed;
            }
        `;
        document.head.appendChild(style);
    }

    formatNumberInput(input) {
        let value = input.value.replace(/[^0-9]/g, '');
        if (value) {
            value = parseInt(value).toLocaleString();
        }
        input.value = value;
    }

    formatPercentInput(input) {
        let value = input.value.replace(/[^0-9.]/g, '');
        if (value && !value.endsWith('%')) {
            input.value = value + '%';
        }
    }

    parseNumberInput(value) {
        return parseInt(value.replace(/[^0-9]/g, '')) || 0;
    }

    parsePercentInput(value) {
        return parseFloat(value.replace(/[^0-9.]/g, '')) || 0;
    }

    showCalculationModal() {
        try {
            // ÏûÖÎ†•Í∞í Í∞ÄÏ†∏Ïò§Í∏∞
            const initialAmount = this.parseNumberInput(document.getElementById('initial-amount').value);
            const annualReturn = this.parsePercentInput(document.getElementById('annual-return').value);
            const investmentYears = parseInt(document.getElementById('investment-years').value) || 0;

            // Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
            if (initialAmount <= 0 || annualReturn <= 0 || investmentYears <= 0) {
                alert('Î™®Îì† Í∞íÏùÑ Ïò¨Î∞îÎ•¥Í≤å ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
                return;
            }

            // Î≥µÎ¶¨ Í≥ÑÏÇ∞
            const results = this.calculateCompoundInterest(initialAmount, annualReturn, investmentYears);
            
            // Î™®Îã¨Ïóê Í≤∞Í≥º ÌëúÏãú
            this.displayResults(results, initialAmount);
            
            // Î™®Îã¨ Ïó¥Í∏∞
            const modal = document.getElementById('compound-result-modal');
            if (modal) {
                modal.classList.add('show');
            }

        } catch (error) {
            console.error('Î≥µÎ¶¨ Í≥ÑÏÇ∞ Ï§ë Ïò§Î•ò:', error);
            alert('Í≥ÑÏÇ∞ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
        }
    }

    calculateCompoundInterest(principal, rate, years) {
        const results = [];
        let currentAmount = principal;
        
        for (let year = 1; year <= years; year++) {
            const previousAmount = currentAmount;
            currentAmount = currentAmount * (1 + rate / 100);
            const yearlyProfit = currentAmount - previousAmount;
            const totalProfit = currentAmount - principal;
            const profitRate = ((currentAmount - principal) / principal) * 100;
            
            results.push({
                year: year,
                yearlyProfit: yearlyProfit,
                totalAmount: currentAmount,
                profitRate: profitRate
            });
        }
        
        return results;
    }

    displayResults(results, initialAmount) {
        const lastResult = results[results.length - 1];
        const totalProfit = lastResult.totalAmount - initialAmount;
        
        // ÏÉÅÎã® ÏöîÏïΩ Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
        const totalProfitElement = document.getElementById('modal-total-profit');
        const finalAmountElement = document.getElementById('modal-final-amount');
        
        if (totalProfitElement) {
            totalProfitElement.textContent = this.formatWon(totalProfit);
        }
        
        if (finalAmountElement) {
            finalAmountElement.textContent = `ÏµúÏ¢Ö Í∏àÏï° ${this.formatWon(lastResult.totalAmount)}`;
        }
        
        // ÌÖåÏù¥Î∏î ÏÉùÏÑ±
        const tableBody = document.getElementById('result-table-body');
        if (tableBody) {
            tableBody.innerHTML = '';
            
            results.forEach(result => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${result.year}</td>
                    <td class="profit-cell">+${this.formatWon(result.yearlyProfit)}</td>
                    <td class="amount-cell">${this.formatWon(result.totalAmount)}</td>
                    <td class="percent-cell">${result.profitRate.toFixed(2)}%</td>
                `;
                tableBody.appendChild(row);
            });
        }
    }

    formatWon(amount) {
        return '‚Ç©' + Math.round(amount).toLocaleString();
    }

    closeModal() {
        const modal = document.getElementById('compound-result-modal');
        if (modal) {
            modal.classList.remove('show');
        }
    }

    async downloadResult() {
        try {
            const modal = document.getElementById('compound-result-modal');
            if (!modal) {
                console.error('Î™®Îã¨ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§');
                return;
            }

            // Î™®Îã¨Ïù¥ Î≥¥Ïù¥Îäî ÏÉÅÌÉúÏù∏ÏßÄ ÌôïÏù∏
            if (!modal.classList.contains('show')) {
                console.error('Î™®Îã¨Ïù¥ Ïó¥Î†§ÏûàÏßÄ ÏïäÏäµÎãàÎã§');
                return;
            }

            // Î°úÎî© ÌëúÏãú
            const saveBtn = document.querySelector('.btn-primary-compound');
            let originalText = '';
            if (saveBtn) {
                originalText = saveBtn.textContent;
                saveBtn.textContent = 'Ï†ÄÏû• Ï§ë...';
                saveBtn.disabled = true;
            }

            // Î™®Îã¨ ÎÇ¥Ïö©Îßå Ï∫°Ï≤òÌïòÍ∏∞ ÏúÑÌï¥ Ïª®ÌÖêÏ∏† ÏòÅÏó≠ ÏÑ†ÌÉù
            const modalContent = modal.querySelector('.modal-content-compound');
            if (!modalContent) {
                throw new Error('Î™®Îã¨ Ïª®ÌÖêÏ∏†Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§');
            }

            // Ïä§ÌÅ¨Î°§ÏùÑ Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÏó¨ Ï†ÑÏ≤¥ ÎÇ¥Ïö©Ïù¥ Î≥¥Ïù¥ÎèÑÎ°ù Ìï®
            modalContent.scrollTop = 0;
            // Ïû†Ïãú ÎåÄÍ∏∞ÌïòÏó¨ Ïä§ÌÅ¨Î°§Ïù¥ ÏôÑÎ£åÎêòÎèÑÎ°ù Ìï®
            await new Promise(resolve => setTimeout(resolve, 100));

            // html2canvasÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Î™®Îã¨ Ï∫°Ï≤ò
            const canvas = await html2canvas(modalContent, {
                backgroundColor: '#ffffff',
                scale: 2, // Í≥†Ìï¥ÏÉÅÎèÑ
                useCORS: true,
                allowTaint: false, // Î≥¥ÏïàÏÉÅ ÏïàÏ†ÑÌïòÍ≤å
                logging: true,
                scrollX: 0,
                scrollY: 0,
                width: modalContent.scrollWidth,
                height: modalContent.scrollHeight,
                foreignObjectRendering: false
            });

            // Ï∫°Ï≤òÎêú Ïù¥ÎØ∏ÏßÄÎ•º Îã§Ïö¥Î°úÎìú
            let imageUrl;
            try {
                imageUrl = canvas.toDataURL('image/png');
            } catch (e) {
                console.error('canvas.toDataURL() Ïò§Î•ò:', e);
                alert('Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû• Í∂åÌïú ÎòêÎäî CORS Î¨∏Ï†úÎ°ú Ï†ÄÏû•Ïù¥ Î∂àÍ∞ÄÌï©ÎãàÎã§.');
                if (saveBtn) {
                    saveBtn.textContent = originalText;
                    saveBtn.disabled = false;
                }
                return;
            }
            const link = document.createElement('a');
            link.download = `Î≥µÎ¶¨Í≥ÑÏÇ∞Í≤∞Í≥º_${new Date().toISOString().slice(0, 10)}.png`;
            link.href = imageUrl;
            link.click();

            // Î≤ÑÌäº ÏÉÅÌÉú Î≥µÏõê
            if (saveBtn) {
                saveBtn.textContent = originalText;
                saveBtn.disabled = false;
            }

            console.log('Î≥µÎ¶¨ Í≥ÑÏÇ∞ Í≤∞Í≥º Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû• ÏôÑÎ£å');
        } catch (error) {
            console.error('Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû• Ï§ë Ïò§Î•ò(Ï†ÑÏ≤¥):', error);
            alert('Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû• Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. ÏΩòÏÜîÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.');
            // Î≤ÑÌäº ÏÉÅÌÉú Î≥µÏõê
            const saveBtn = document.querySelector('.btn-primary-compound');
            if (saveBtn) {
                saveBtn.textContent = 'Ï†ÄÏû•';
                saveBtn.disabled = false;
            }
        }
    }

    async shareResult() {
        try {
            const modal = document.getElementById('compound-result-modal');
            if (!modal) {
                console.error('Î™®Îã¨ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§');
                return;
            }

            // Î™®Îã¨Ïù¥ Î≥¥Ïù¥Îäî ÏÉÅÌÉúÏù∏ÏßÄ ÌôïÏù∏
            if (!modal.classList.contains('show')) {
                console.error('Î™®Îã¨Ïù¥ Ïó¥Î†§ÏûàÏßÄ ÏïäÏäµÎãàÎã§');
                return;
            }

            // Î°úÎî© ÌëúÏãú
            const shareBtn = document.querySelector('.btn-secondary-compound');
            if (shareBtn) {
                const originalText = shareBtn.textContent;
                shareBtn.textContent = 'Í≥µÏú† Ï§ë...';
                shareBtn.disabled = true;
            }

            // Î™®Îã¨ ÎÇ¥Ïö©Îßå Ï∫°Ï≤òÌïòÍ∏∞ ÏúÑÌï¥ Ïª®ÌÖêÏ∏† ÏòÅÏó≠ ÏÑ†ÌÉù
            const modalContent = modal.querySelector('.modal-content-compound');
            if (!modalContent) {
                throw new Error('Î™®Îã¨ Ïª®ÌÖêÏ∏†Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§');
            }

            // Ïä§ÌÅ¨Î°§ÏùÑ Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÏó¨ Ï†ÑÏ≤¥ ÎÇ¥Ïö©Ïù¥ Î≥¥Ïù¥ÎèÑÎ°ù Ìï®
            modalContent.scrollTop = 0;
            // Ïû†Ïãú ÎåÄÍ∏∞ÌïòÏó¨ Ïä§ÌÅ¨Î°§Ïù¥ ÏôÑÎ£åÎêòÎèÑÎ°ù Ìï®
            await new Promise(resolve => setTimeout(resolve, 100));
            // html2canvasÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Î™®Îã¨ Ï∫°Ï≤ò
            const canvas = await html2canvas(modalContent, {
                backgroundColor: '#ffffff',
                scale: 2, // Í≥†Ìï¥ÏÉÅÎèÑ
                useCORS: true,
                allowTaint: true,
                logging: false,
                scrollX: 0,
                scrollY: 0,
                width: modalContent.scrollWidth,
                height: modalContent.scrollHeight,
                foreignObjectRendering: false
            });

            // Ï∫°Ï≤òÎêú Ïù¥ÎØ∏ÏßÄÎ•º BlobÏúºÎ°ú Î≥ÄÌôò
            canvas.toBlob(async (blob) => {
                try {
                    // Web Share API ÏßÄÏõê ÌôïÏù∏
                    if (navigator.share && navigator.canShare) {
                        const file = new File([blob], `Î≥µÎ¶¨Í≥ÑÏÇ∞Í≤∞Í≥º_${new Date().toISOString().slice(0, 10)}.png`, {
                            type: 'image/png'
                        });

                        await navigator.share({
                            title: 'Î≥µÎ¶¨ Í≥ÑÏÇ∞ Í≤∞Í≥º',
                            text: 'Î≥µÎ¶¨ Í≥ÑÏÇ∞ Í≤∞Í≥ºÎ•º ÌôïÏù∏Ìï¥Î≥¥ÏÑ∏Ïöî!',
                            files: [file]
                        });
                    } else {
                        // Web Share APIÎ•º ÏßÄÏõêÌïòÏßÄ ÏïäÎäî Í≤ΩÏö∞ ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨
                        await this.copyToClipboard(canvas);
                        alert('Ïù¥ÎØ∏ÏßÄÍ∞Ä ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§!');
                    }
                } catch (shareError) {
                    console.error('Í≥µÏú† Ï§ë Ïò§Î•ò:', shareError);
                    // Í≥µÏú† Ïã§Ìå® Ïãú ÌÅ¥Î¶ΩÎ≥¥Îìú Î≥µÏÇ¨Î°ú ÎåÄÏ≤¥
                    try {
                        await this.copyToClipboard(canvas);
                        alert('Ïù¥ÎØ∏ÏßÄÍ∞Ä ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§!');
                    } catch (clipboardError) {
                        console.error('ÌÅ¥Î¶ΩÎ≥¥Îìú Î≥µÏÇ¨ Ï§ë Ïò§Î•ò:', clipboardError);
                        alert('Í≥µÏú† Í∏∞Îä•ÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏäµÎãàÎã§. Ï†ÄÏû• Í∏∞Îä•ÏùÑ ÏÇ¨Ïö©Ìï¥Ï£ºÏÑ∏Ïöî.');
                    }
                }

                // Î≤ÑÌäº ÏÉÅÌÉú Î≥µÏõê
                if (shareBtn) {
                    shareBtn.textContent = originalText;
                    shareBtn.disabled = false;
                }
            }, 'image/png');

        } catch (error) {
            console.error('Ïù¥ÎØ∏ÏßÄ Í≥µÏú† Ï§ë Ïò§Î•ò:', error);
            alert('Ïù¥ÎØ∏ÏßÄ Í≥µÏú† Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
            
            // Î≤ÑÌäº ÏÉÅÌÉú Î≥µÏõê
            const shareBtn = document.querySelector('.btn-secondary-compound');
            if (shareBtn) {
                shareBtn.textContent = 'Í≥µÏú†ÌïòÍ∏∞';
                shareBtn.disabled = false;
            }
        }
    }

    async copyToClipboard(canvas) {
        return new Promise((resolve, reject) => {
            canvas.toBlob(async (blob) => {
                try {
                    await navigator.clipboard.write([
                        new ClipboardItem({
                            'image/png': blob
                        })
                    ]);
                    resolve();
                } catch (error) {
                    reject(error);
                }
            }, 'image/png');
        });
    }

    getLastCalculationResults() {
        // ÎßàÏßÄÎßâ Í≥ÑÏÇ∞ Í≤∞Í≥ºÎ•º Î∞òÌôò (Í∞ÑÎã®Ìïú Íµ¨ÌòÑ)
        const tableBody = document.getElementById('result-table-body');
        if (tableBody && tableBody.children.length > 0) {
            return {
                timestamp: new Date().toISOString(),
                results: Array.from(tableBody.children).map(row => ({
                    year: row.children[0].textContent,
                    profit: row.children[1].textContent,
                    total: row.children[2].textContent,
                    rate: row.children[3].textContent
                }))
            };
        }
        return null;
    }

    // Ïô∏Î∂ÄÏóêÏÑú Ï†ëÍ∑º Í∞ÄÎä•Ìïú Î©îÏÑúÎìúÎì§
    getCalculationResult() {
        const initialAmount = this.parseNumberInput(document.getElementById('initial-amount').value);
        const annualReturn = this.parsePercentInput(document.getElementById('annual-return').value);
        const investmentYears = parseInt(document.getElementById('investment-years').value) || 0;

        return {
            initialAmount,
            annualReturn,
            investmentYears
        };
    }
}

// Ï†ÑÏó≠ Í∞ùÏ≤¥Î°ú ÎÇ¥Î≥¥ÎÇ¥Í∏∞
window.CompoundCalculator = CompoundCalculator; 